/**
 * girder-ui v1.1.0 ()
 * Copyright 2016 wyf
 * Licensed under MIT
 */
"use strict";angular.module("girder",["ui.bootstrap","ngRoute","ngResource","ngCookies","girder.security","girder.config","girder.log","girder.ui"]),angular.module("girder.config",[]).constant("girder.version",{version:"1.1.0",releaseDate:"2015-12-02 10:17:00"}).provider("girderConfig",{baseUrl:"please config baseUrl before use this frameWork",homeUrl:"/home",loginUrl:"/login",logoutSuccessUrl:"/login",logLevel:"ALL",divisionId:"please config divisionId before use this frameWork",leaf:"70",authServerUrl:"please config authServer before use this frameWork",loginAndLogoutService:"please config loginAndLogoutService before use this frameWork",isPortalLogin:!1,ssoAppId:"defaultAppId",userDetail:{url:"please config userDetail.url before use this frameWork",paramName:"please config userDetail.paramName before use this frameWork"},$get:[function(){var e={baseUrl:this.baseUrl,homeUrl:this.homeUrl,loginUrl:this.loginUrl,logoutSuccessUrl:this.logoutSuccessUrl,logLevel:this.logLevel.toString().toUpperCase(),divisionId:this.divisionId,leaf:this.leaf,authServerUrl:this.authServerUrl,loginAndLogoutService:this.loginAndLogoutService,isPortalLogin:this.isPortalLogin,ssoAppId:this.ssoAppId,userDetail:this.userDetail};return e}]}),angular.module("girder.log",["girder.config"]).config(["$provide",function(e){e.decorator("$log",["$delegate","girderConfig","$filter",function(e,r,t){function n(){switch(r.logLevel){case"ERROR":return["error"];case"WARN":return["warn","error"];case"INFO":return["log","info","warn","error"];case"LOG":return["log","info","warn","error"];case"DEBUG":return["debug","log","info","warn","error"];case"ALL":return["debug","log","info","warn","error"];default:return[]}}function i(e,r){return function(){var t=[].slice.call(arguments);t[0]=[a(new Date,"yyyy-MM-dd HH:mm:ss")," [",r,"] ",t[0]].join(""),e.apply(null,t)}}function o(){return function(){}}var a=t("date"),u=n();return angular.forEach(["debug","log","info","warn","error"],function(t){"OFF"===r.logLevel?e[t]=o():-1===u.indexOf(t)?e[t]=o():e[t]=i(e[t],t)}),e}])}]),angular.module("girder.security",["girder.security.authorize","girder.security.account","girder.security.dataSafe","girder.security.captcha"]),angular.module("girder.ui",["girder.ui.spinner","girder.ui.menu","girder.ui.messageBoxModule","girder.ui.paginateModule","girder.ui.selectCodeModule","girder.ui.longDateModule","girder.ui.selectAddress","girder.ui.enterKeyDecorative","girder.ui.imageModule"]),angular.module("girder.ui.spinner",[]),angular.module("girder.ui.messageBoxModule",["ui.bootstrap"]),angular.module("girder.ui.paginateModule",["ui.bootstrap"]),angular.module("girder.ui.selectCodeModule",[]),angular.module("girder.ui.longDateModule",[]),angular.module("girder.ui.selectAddress",[]),angular.module("girder.ui.enterKeyDecorative",[]),angular.module("girder.ui.imageModule",[]),angular.module("girder.security.account",["girder.security.account.center","girder.security.account.password","girder.security.account.mobile"]),angular.module("girder.security.account.center",[]),angular.module("girder.security.account.password",[]),angular.module("girder.security.account.mobile",[]),angular.module("girder.security.account").config(["$routeProvider",function(e){e.when("/girder/security/account",{templateUrl:"girder/security/account/center/accountCenter.html",module:"girder.security.account",controller:"AccountCenterController"}).when("/girder/security/account/password",{templateUrl:"girder/security/account/password/passwordchange.html",module:"girder.security.account.password"}).when("/girder/security/account/mobile",{templateUrl:"girder/security/account/mobile/mobileModify.html",module:"girder.security.account.mobile",controller:"inforModifyCtrl"})}]),angular.module("girder.security.authorize",["girder.security.authorize.core","girder.security.authorize.resource","girder.security.authorize.userSession","girder.security.authorize.authService","girder.security.authorize.logon"]),angular.module("girder.security.authorize.core",[]),angular.module("girder.security.authorize.resource",[]),angular.module("girder.security.authorize.userSession",["girder.security.authorize.core","girder.security.authorize.resource"]),angular.module("girder.security.authorize.authService",["girder.security.authorize.core","girder.security.authorize.logon"]),angular.module("girder.security.authorize.logon",[]),angular.module("girder.security.authorize.authService").factory("AuthService",["$http","$log","Session","girderConfig","$injector",function(e,r,t,n,i){var o={},a=i.get(n.loginAndLogoutService);return o.login=function(e){return n.isPortalLogin||(r.debug("AuthService非portal内登录清除缓存.."),localStorage.clear()),r.debug("AuthService当前注入的服务名是",n.loginAndLogoutService,"实例对象=",a),a.login(e)},o.logout=function(){return r.debug("当前注入的服务名是",n.loginAndLogoutService),a.logout()},o.isAuthenticated=function(){return t.isAuthenticated()},o.getMenus=function(){return t.getMenus()},o.isAuthorized=function(e){return r.log("authService验证传入的url是否可以访问",e),o.isAuthenticated()},o}]),angular.module("girder.security.authorize.core").constant("CLIENT_USER_COOKIE",{userCookie:"girder-security-user-cookie"}).constant("SECURITY_USER_CACHE",{menusCache:"girder-security-menus-cache"}).constant("AUTH_EVENTS",{needLogin:"auth-need-login",loginSuccess:"auth-login-success",loginFailed:"auth-login-failed",logoutSuccess:"auth-logout-success",sessionTimeout:"auth-session-timeout",notAuthenticated:"auth-not-authenticated",notAuthorized:"auth-not-authorized",redirectToLogin:"auth-redirect-to-login"}),angular.module("girder.security.authorize.authService").factory("GirderSecuritySessionInjector",["$q","$rootScope","$log","GirderUserLoginEventService",function(e,r,t,n){var i={responseError:function(r){return 401===r.status?(t.debug("GirderSecuritySessionInjector 401 error:",r),n.raiseRedirectToLoginEvent(),e.reject({data:"没有权限，请重新登录",status:401})):e.reject(r)}};return i}]).config(["$httpProvider",function(e){e.interceptors.push("GirderSecuritySessionInjector")}]),angular.module("girder.security.authorize.authService").constant("HRSS_APP_USER_DETAILS_CACHE",{appUserDetailCache:"HRSS_APP_USER_DETAILS"}).factory("GriderUserDetailService",["$log","$q","$resource","girderConfig","HRSS_APP_USER_DETAILS_CACHE",function(e,r,t,n,i){var o=t(n.baseUrl+n.userDetail.url+"/:Id",{Id:"@id"},{queryUserDetail:{method:"GET",params:{buzzNumber:"@buzzNumber"}}}),a={},u=function(t,i){if(i=JSON.parse(i),void 0===t||t===i[n.userDetail.paramName]){var o=r.defer();return e.debug("从缓存载入用户详情"),o.resolve(i),o.promise}return s(t)},s=function(e){var r={};return r[n.userDetail.paramName]=e,o.queryUserDetail(r).$promise.then(function(e){return localStorage.setItem(i.appUserDetailCache,JSON.stringify(e)),e})};return a.loadUserDetail=function(e){var r=localStorage.getItem(i.appUserDetailCache);return void 0!==r&&null!==r?u(e,r):s(e)},a}]),angular.module("girder.security.captcha",[]),angular.module("girder.security.captcha").factory("GirderImageCaptchaService",["$log","girderConfig","$resource",function(e,r,t){var n=r.baseUrl+"/api/security/captcha",i=t(n,{},{getCaptcha:{method:"GET",url:n,isArray:!1}});i.prototype.getImageUrl=function(){return n+"/"+this.id};var o={};return o.getNextCaptcha=function(){return i.getCaptcha()},o}]),angular.module("girder.security.captcha").factory("GirderMobileCaptchaService",["$log","girderConfig","$resource",function(e,r,t){var n=r.baseUrl+"/auth/sm/captcha/:mobileNumber",i=t(n,{mobileNumber:"@mobileNumber"},{getCaptcha:{method:"POST",url:n,param:{mobileNumber:0},isArray:!0}}),o={};return o.getNextCaptcha=function(e){return i.getCaptcha({mobileNumber:e})},o}]),angular.module("girder.security.dataSafe",["girder.security.dataSafe.signer"]),angular.module("girder.security.dataSafe.signer",[]),angular.module("girder.security.dataSafe.password",[]),angular.module("girder.security.dataSafe.password").service("GirderPasswordEncryptorService",[function(){this.encryptPassword=function(e){var r=angular.copy(e),t=e.username+":"+CryptoJS.MD5(e.password);return r.password=CryptoJS.SHA1(t).toString(),r}}]),angular.module("girder.security.dataSafe.signer").factory("RestFulSecuritySessionSigner",["$log","Session",function(e,r){var t={},n=function(e){if(angular.isUndefined(e)||null===e)return"";if("object"==typeof e&&e||"function"==typeof e){var r=i(e);return JSON.stringify(r)}return e},i=function(e){var r=angular.copy(e);for(var t in r)"$"===t.charAt(0)&&(r[t]=void 0);return r},o=function(r){var t="";if(angular.isUndefined(r)||null===r)return"";var n=a(r);for(var i in n)t=t+n[i]+",";return t=t.substring(0,t.length-1),e.debug("SessionSigner验证参数排序:",r,"参数=",t),t},a=function(e){var r=[];for(var t in e)angular.isUndefined(e[t])||null===e[t]||r.push(u(t,e[t]));return r.sort(),r},u=function(e,r){return'"'+e+'":"'+r+'"'},s=function(){return(new Date).getTime()},l=function(){return r.user.account},c=function(t,i,a,u,s){var l=o(a),c=n(u),d=i+":"+t+":"+l+":"+c+":"+s,g=CryptoJS.HmacSHA256(d,r.id).toString(CryptoJS.enc.Hex);return e.debug("SessionSigner 创建签名="+r.id+" 签名对象=",d," 签名结果=",g),g};return t.getHttpSecurityHead=function(e,r,t,n){var i={},o=s();return i["X-MICRO-TIME"]=o,i["X-HMAC-HASH"]=c(e,r,t,n,o),i["X-USER"]=l(),i},t}]),angular.module("girder.ui.enterKeyDecorative").service("GirderEnterKeyDecorativeService",function(){var e={};return e.dotab=function(){angular.element(document).on("keydown",function(e){if(13===e.which)for(var r=document.getElementsByClassName("form-control"),t=-1,n=0;n<r.length;n++)if(r[n]===e.target)t=n;else if(t>=0&&r[n]&&"hidden"!==r[n].type&&!r[n].hasAttribute("readonly")&&r[n].disabled!==!0)return r[n].focus(),!0;return!0})},e}),angular.module("girder.ui.imageModule",["girder.ui.imageModule.compress","girder.ui.imageModule.viewBox"]),angular.module("girder.ui.longDateModule").directive("girderDateFormat",["$filter","$log","LongDateService",function(e,r,t){return{require:"ngModel",restrict:"A",link:function(e,n,i,o){function a(e){switch(s){case"second":return t.secondLongToDate(e);case"day":return t.longToDay(e);case"month":return t.longToMonth(e);case"year":return t.longToYear(e)}}function u(e){switch(s){case"second":return t.secondToLong(e);case"day":return t.dayToLong(e);case"month":return t.monthToLong(e);case"year":return t.yearToLong(e)}}var s=i.girderDateFormat;r.debug("传入girder-date-format格式为："+s),o.$formatters.push(a),o.$parsers.push(u)}}}]).filter("SecondLongToDateFilter",["LongDateService",function(e){return function(r){return e.secondLongToDate(r)}}]).filter("LongToDayFilter",["LongDateService",function(e){return function(r){return e.longToDay(r)}}]).filter("LongToMonthFilter",["LongDateService",function(e){return function(r){return e.longToMonth(r)}}]).filter("LongToYearFilter",["LongDateService",function(e){return function(r){return e.longToYear(r)}}]).filter("SecondToLongFilter",["LongDateService",function(e){return function(r){return e.secondToLong(r)}}]).filter("DayToLongFilter",["LongDateService",function(e){return function(r){return e.dayToLong(r)}}]).filter("MonthToLongFilter",["LongDateService",function(e){return function(r){return e.monthToLong(r)}}]).filter("YearToLongFilter",["LongDateService",function(e){return function(r){return e.yearToLong(r)}}]).service("LongDateService",["$log","$filter",function(e,r){var t=function(e){return 10>e?"0"+e:""+e},n=r("date"),i={};return i.secondLongToDate=function(e){if(!e||void 0===e)return e;var r=e.toString();if(14!==r.length)return e;var t=r.substring(0,4),i=r.substring(4,6),o=r.substring(6,8),a=r.substring(8,10),u=r.substring(10,12),s=r.substring(12,14),l=new Date(t,parseInt(i,10)-1,o,a,u,s);return n(l,"yyyy-MM-dd")},i.longToDay=function(e){if(!e||void 0===e)return e;var r=e.toString();if(8!==r.length)return e;var t=r.substring(0,4),i=r.substring(4,6),o=r.substring(6,8),a=new Date(t,parseInt(i,10)-1,o);return n(a,"yyyy-MM-dd")},i.longToMonth=function(e){if(!e||void 0===e)return e;var r=e.toString();if(6!==r.length)return e;var t=r.substring(0,4),n=r.substring(4,6);return new Date(t,parseInt(n,10)-1)},i.longToYear=function(e){if(!e||void 0===e)return e;var r=e.toString();if(4!==r.length)return e;var t=r.substring(0,4);return new Date(t)},i.secondToLong=function(e){if(!e||void 0===e)return e;var r=t(e.getFullYear())+t(1+e.getMonth())+t(e.getDate())+t(e.getHours())+t(e.getMinutes())+t(e.getSeconds());return Number(r)},i.dayToLong=function(e){if(!e||void 0===e)return e;var r=t(e.getFullYear())+t(1+e.getMonth())+t(e.getDate());return Number(r)},i.monthToLong=function(e){if(!e||void 0===e)return e;var r=t(e.getFullYear())+t(1+e.getMonth());return Number(r)},i.yearToLong=function(e){if(!e||void 0===e)return e;var r=t(e.getFullYear());return Number(r)},i}]),angular.module("girder.ui.menu",["girder.security","girder.ui.menu.top","girder.ui.menu.left","girder.ui.menu.loginToolBar"]),angular.module("girder.ui.messageBoxModule").service("messageService",["$uibModal",function(e){var r={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"girder/ui/messagebox/messageview.html"},t={closeButtonText:"Close",actionButtonText:"OK",headerText:"Proceed?",bodyText:"Perform this action?"};this.showModal=function(e,r){return e||(e={}),e.backdrop="static",this.show(e,r)},this.show=function(n,i){var o={},a={};return angular.extend(o,r,n),angular.extend(a,t,i),o.controller||(o.controller="messageServiceController"),o.resolve={modalOptions:function(){return a}},e.open(o).result}}]).controller("messageServiceController",["$scope","$modalInstance","modalOptions",function(e,r,t){e.modalOptions=t,e.modalOptions.ok=function(e){r.close(e)},e.modalOptions.close=function(){r.dismiss("cancel")}}]).service("messageBox",["messageService",function(e){var r=function(r,t){var n={closeButtonText:null,actionButtonText:"确定",headerText:r,bodyText:t};return e.showModal({},n)};this.showInfo=function(e,t){var n=null===e?"消息提示":e;return r(n,t)},this.showInfo=function(e){return r("消息提示",e)},this.showError=function(e,t){var n=null===e?"错误提示":e;return r(n,t)},this.showError=function(e){return r("错误提示",e)}}]).service("confirmBox",["messageService",function(e){var r=function(r,t){var n={closeButtonText:"否",actionButtonText:"是",headerText:r,bodyText:t};return e.showModal({},n)};this.showInfo=function(e,t){var n=null===e?"消息提示":e;return r(n,t)},this.showInfo=function(e){return r("消息提示",e)}}]),angular.module("girder.ui.paginateModule").filter("startFrom",function(){return function(e,r,t){return e?e.slice((r-1)*t):e}}).controller("PaginationController",["$scope","$attrs","$parse",function(e,r,t){var n=this,i={$setViewValue:angular.noop},o=r.numPages?t(r.numPages).assign:angular.noop;this.init=function(o,a){i=o,this.config=a,i.$render=function(){n.render()},r.itemsPerPage?e.$parent.$watch(t(r.itemsPerPage),function(r){n.itemsPerPage=parseInt(r,10),e.totalPages=n.calculateTotalPages()}):this.itemsPerPage=a.itemsPerPage},this.calculateTotalPages=function(){var r=this.itemsPerPage<1?1:Math.ceil(e.totalItems/this.itemsPerPage);return Math.max(r||0,1)},this.render=function(){e.page=parseInt(i.$viewValue,10)||1},e.selectPage=function(r){e.page!==r&&r>0&&r<=e.totalPages&&(i.$setViewValue(r),i.$render())},e.getPageRowCount=function(){return n.itemsPerPage*e.page>e.totalItems?e.totalItems-n.itemsPerPage*(e.page-1):n.itemsPerPage},e.getText=function(r){return e[r+"Text"]||n.config[r+"Text"]},e.noPrevious=function(){return 1===e.page},e.noNext=function(){return e.page===e.totalPages},e.$watch("totalItems",function(){e.totalPages=n.calculateTotalPages()}),e.$watch("totalPages",function(r){o(e.$parent,r),e.page>r?e.selectPage(r):i.$render()})}]).constant("paginationConfig",{itemsPerPage:10,boundaryLinks:!0,directionLinks:!0,jumpLinks:!0,rowCountLinks:!0,rotate:!0,maxSize:7}).directive("girderPagination",["$parse","paginationConfig",function(e,r){return{restrict:"EA",scope:{totalItems:"="},require:["girderPagination","?ngModel"],controller:"PaginationController",templateUrl:"girder/ui/paginate/pagination.html",replace:!0,link:function(t,n,i,o){function a(e,r,t){return{number:e,text:r,active:t}}function u(e,r){var t=[],n=1,i=r,o=angular.isDefined(c)&&r>c;o&&(d?(n=Math.max(e-Math.floor(c/2),1),i=n+c-1,i>r&&(i=r,n=i-c+1)):(n=(Math.ceil(e/c)-1)*c+1,i=Math.min(n+c-1,r)));for(var u=n;i>=u;u++){var s=a(u,u,u===e);t.push(s)}if(o&&!d){if(n>1){var l=a(n-1,"...",!1);t.unshift(l)}if(r>i){var g=a(i+1,"...",!1);t.push(g)}}return t}var s=o[0],l=o[1];if(l){var c=angular.isDefined(i.maxSize)?t.$parent.$eval(i.maxSize):r.maxSize,d=angular.isDefined(i.rotate)?t.$parent.$eval(i.rotate):r.rotate;t.boundaryLinks=angular.isDefined(i.boundaryLinks)?t.$parent.$eval(i.boundaryLinks):r.boundaryLinks,t.directionLinks=angular.isDefined(i.directionLinks)?t.$parent.$eval(i.directionLinks):r.directionLinks,t.jumpLinks=angular.isDefined(i.jumpLinks)?t.$parent.$eval(i.jumpLinks):r.jumpLinks,t.rowCountLinks=angular.isDefined(i.rowCountLinks)?t.$parent.$eval(i.rowCountLinks):r.rowCountLinks,s.init(l,r),i.maxSize&&t.$parent.$watch(e(i.maxSize),function(e){c=parseInt(e,10),s.render()});var g=s.render;s.render=function(){g(),t.page>0&&t.page<=t.totalPages&&(t.pages=u(t.page,t.totalPages))}}}}}]),angular.module("girder.ui.messageBoxModule").service("reportService",["$uibModal",function(e){var r={backdrop:!0,keyboard:!0,modalFade:!0,templateUrl:"girder/ui/reporthelper/reporthelper.html"},t={closeButtonText:"Close",actionButtonText:"OK",headerText:"Proceed?",bodyText:"Perform this action?"};this.showModal=function(e,r){return e||(e={}),e.backdrop="static",this.show(e,r)},this.show=function(n,i){var o={},a={};return angular.extend(o,r,n),angular.extend(a,t,i),o.controller||(o.controller="reportController"),o.resolve={modalOptions:function(){return a}},o.size="lg",e.open(o).result}}]).controller("reportController",["$scope","$modalInstance","modalOptions","$http","$log","$sce",function(e,r,t,n,i,o){e.loading=!0,e.message="正在生成报表，请耐心等待。。。",e.modalOptions=t,e.init=function(){var r={method:t.method,url:t.url,params:t.params,data:t.data,headers:{Accept:"*/*"},responseType:"arraybuffer"};n(r).success(function(r){e.loading=!1;var t=new Blob([r],{type:"application/pdf"}),n=URL.createObjectURL(t);e.content=o.trustAsResourceUrl(n)}).error(function(){e.message="报表生成错误！"})},e.modalOptions.ok=function(e){r.close(e)},e.modalOptions.close=function(){r.dismiss("cancel")}}]).service("reportHelper",["reportService","$log",function(e,r){var t=function(r){return r.closeButtonText="关闭",r.actionButtonText=null,e.showModal({},r)};this.showReport=function(e){return r.log("窗口内容-----"+JSON.stringify(e)),t(e)}}]),angular.module("girder.ui.selectCodeModule").constant("GIRDER_UI_SELECT_CODE",{codeListCache:"girder_ui_select_code"}).filter("selectCodeType",function(){return function(e,r){return e&&void 0!==e.codeList?e.codeList[r]:e}}).filter("selectCodeName",["selectCodeService",function(e){return function(r,t){return r?e.getCodeName(t,r):r}}]).service("selectCodeService",["$log","$resource","GIRDER_UI_SELECT_CODE",function(e,r,t){var n=",",i={selectCodeMap:null},o=function(r,t){u(),e.debug("获取单个代码名称",r,t);var n=i.selectCodeMap.codeList[r];for(var o in n)if(n[o].value===t)return n[o].name;return t},a=function(r,t){e.debug("获取逗号分隔代码名称",r,t);var i="",a=t.split(n);return angular.forEach(a,function(e){i+=n+o(r,e)}),i=i.substring(1)},u=function(){if(null===i.selectCodeMap){var e=localStorage.getItem(t.codeListCache);i.selectCodeMap=JSON.parse(e)}};return i.getCodeName=function(e,r){return-1!==r.indexOf(n)?a(e,r):o(e,r)},i}]).service("selectCodeLoader",["$log","$resource","GIRDER_UI_SELECT_CODE","girderConfig","$q","SelectCodeLoaderConfig",function(e,r,t,n,i,o){var a=r(n.baseUrl+o.url,{Id:"@id"},{loadAll:{method:"Get"},refresh:{method:"Put"}}),u={};return u.loadCodeList=function(){var r=i.defer(),n=localStorage.getItem(t.codeListCache);return void 0!==n&&null!==n?(n=JSON.parse(n),e.debug("从缓存加载代码:",n),r.resolve(n),r.promise):a.loadAll().$promise.then(function(r){return e.debug("首次加载代码:",r),localStorage.setItem(t.codeListCache,JSON.stringify(r)),r})},u}]).provider("SelectCodeLoaderConfig",{url:"/api/selectcodes/:Id",$get:[function(){var e={url:this.url};return e}]}),angular.module("girder.ui.selectAddress").directive("selectAddress",["$log","$compile","$http","$templateCache",function(e,r,t,n){return{restrict:"A",require:"ngModel",scope:{data:"=",hasAdd:"=",add:"=",colOption:"@",selectCallback:"&"},link:function(e,t,i,o){function a(r){return e.value=r,s(r),setTimeout(function(){e.resize()}(t),1e3),c()}function u(){return e.value}function s(r){if(e.selectNames=[],e.candidates=[],null!==e.data&&""!==e.data&&void 0!==e.data&&(e.candidates[0]=e.data,null!==r&&""!==r&&void 0!==r))for(var t=0;t<e.data.length;t++){var n=e.data[t];if(e.selectNames[0]=n[h],n[f]===r)return!0;if(e.candidates[1]=n[m],l(n,r))return!0;e.candidates.pop(),e.selectNames=[]}return!1}function l(r,t){var n=e.selectNames.length,i=e.candidates.length;if(r.hasOwnProperty(m)){for(var o=0;o<r[m].length;o++){var a=r[m][o];if(e.selectNames[n]=a[h],a[f]===t)return!0;if(a.hasOwnProperty(m)&&(e.candidates[i]=a[m]),l(a,t))return!0;a.hasOwnProperty(m)&&e.candidates.pop(),e.selectNames.pop()}return!1}}function c(){for(var r="",t=0;t<e.selectNames.length;t++)r+=e.selectNames[t];return e.hasAdd&&null!==e.add&&""!==e.add&&void 0!==e.add&&(r+=e.add),r}var d,g=e.$eval(e.colOption),f=g.value,h=g.name,m=g.child,v="girder/ui/selectState/stateCodeView.html",p=n.get(v),S=function(n){d=r(n)(e),d.on("click",function(r){var t=r.srcElement?r.srcElement:r.target;return t.classList.contains("btn-success")||e.resize(),!1}),t.parent().append(d),e.resize()};t.on("click keydown",function(){return null!==e.data&&void 0!==e.data&&(0===e.candidates.length?(s(o.$modelValue),setTimeout(function(){e.show()}(t),500)):e.show()),!1}),angular.element(window).on("click",function(){return e.hide()}),e.show=function(){return null!==d&&void 0!==d?d.addClass("active"):void 0},e.hide=function(){null!==d&&void 0!==d&&d.removeClass("active")},e.resize=function(){if(null!==d&&void 0!==d){var r=e.candidates.length?e.candidates.length:1;return d.css({"margin-left":-(300*r)/2}),!1}},e.select=function(r,t){var n=e.candidates.indexOf(t);e.selectNames.length>n&&e.selectNames.splice(n,e.selectNames.length-n),e.selectNames[e.selectNames.length]=r[h],e.candidates.length>n+1&&e.candidates.splice(n+1,e.candidates.length-n-1),r.hasOwnProperty(m)&&r[m].length>0&&(e.candidates[e.candidates.length]=r[m])},e.submit=function(){var r="",t="",n="",i=[],a=e.selectNames.length;if(a>0&&(r=e.selectNames[a-1],null!==r&&""!==r&&void 0!==r))for(var u=0;u<e.candidates[a-1].length;u++)if(e.candidates[a-1][u][h]===r){t=e.candidates[a-1][u][f],n=e.candidates[a-1][u],i=e.selectNames;break}e.value=t,e.selectCallback({item:n,names:i}),o.$setViewValue(c()),o.$render(),e.hide()},e.clear=function(){e.candidates=[],e.candidates[0]=e.data,e.selectNames=[],e.value="",e.add=""},e.$watch("data",function(e){null!==e&&void 0!==e&&s(o.$modelValue)}),e.$watch("add",function(){o.$setViewValue(c()),o.$render()}),o.$formatters.push(a),o.$parsers.unshift(u),e.clear(),S(p)}}}]),angular.module("girder.ui.selectAddress").constant("GIRDER_UI_SELECT_STATE",{stateListCache:"girder_ui_select_state"}).service("selectStateLoader",["$log","$http","$resource","girderConfig","GIRDER_UI_SELECT_STATE","$q","SelectStateLoaderConfig",function(e,r,t,n,i,o,a){var u=t(n.baseUrl+a.url,{divisionId:"@divisionId",leaf:"@leaf"},{loadAll:{method:"Get",isArray:!0}}),s={};return s.loadStateList=function(){var r=o.defer(),t=localStorage.getItem(i.stateListCache);if(void 0!==t&&null!==t)return t=JSON.parse(t),e.debug("加载缓存行政区划:",t),r.resolve(t),r.promise;var a={divisionId:n.divisionId,leaf:n.leaf};return u.loadAll(a).$promise.then(function(r){return e.debug("首次加载行政区划:",r),localStorage.setItem(i.stateListCache,JSON.stringify(r)),r})},s}]).provider("SelectStateLoaderConfig",{url:"/api/areacode/:divisionId/:leaf",$get:[function(){var e={url:this.url};return e}]}),angular.module("girder.ui.spinner").config(["$httpProvider",function(e){var r=function(e){return angular.element("#spinner").show(),e};e.defaults.transformRequest.push(r);var t=function(e){return{response:function(e){return angular.element("#spinner").hide(),e},responseError:function(r){return angular.element("#spinner").hide(),e.reject(r)}}};t.$inject=["$q","$window"],e.interceptors.push(t)}]),angular.module("girder.security.account.mobile").controller("inforModifyCtrl",["$scope","$log","inforModifyService","GirderMobileCaptchaService",function(e,r,t,n){var i,o,a=60;e.mobileDetails={oldMobileNumber:"",newMobileNumber:""},e.mobileHttpHeader={mobilenumber:"",captcha:""},e.mobileModify=function(){e.mobileHttpHeader.mobilenumber=e.mobileDetails.oldMobileNumber,r.info("infoModifyController http header",e.mobileHttpHeader),r.info("infoModifyController mobileDetails",e.mobileDetails),t.infoModify(e.mobileDetails,e.mobileHttpHeader).then(function(){e.messageBox.showInfo("手机号码修改成功")},function(t){r.error("infoModifyController手机号码修改失败",t),e.messageBox.showInfo("手机号码修改失败")})},e.sendMessage=function(){o=a,angular.element("#btnSendCode").attr("disabled","true"),angular.element("#btnSendCode").val(o+"秒后重发"),i=window.setInterval(function(){0===o?(window.clearInterval(i),angular.element("#btnSendCode").removeAttr("disabled"),angular.element("#btnSendCode").val("重新发送"),angular.element("#oldMobileNumber").removeAttr("disabled")):(o--,angular.element("#btnSendCode").val(o+"秒后重发"),angular.element("#oldMobileNumber").attr("disabled","true"))},1e3),n.getNextCaptcha(e.mobileDetails.oldMobileNumber).$promise.then(function(){r.info("信息修改（修改电话）的验证码已经发送")},function(){r.info("信息修改（修改电话）的验证码发送失败")})}}]).factory("inforModifyService",["$http","$log",function(e,r){var t=[],n="/ws/user/person/mobilenumber";return t.infoModify=function(t,i){return r.info("inforModifyService手机号码修改",t),e({method:"PUT",url:n,headers:i,data:t})},t}]),angular.module("girder.security.account.center").controller("AccountCenterController",["$scope","Session","$log",function(e,r,t){e.user=r.getUser(),t.info("账户管理从Session中得到的用户getUser()",e.user)}]),angular.module("girder.security.account.password",[]).directive("girderValidPassword",function(){return{restrict:"A",require:"ngModel",scope:{reference:"=girderValidPassword"},link:function(e,r,t,n){n.$parsers.unshift(function(r){""===r?n.$setValidity("_required",!1):n.$setValidity("_required",!0);var t=r!==e.reference;n.$setValidity("notEqual",!t)}),e.$watch("reference",function(e){n.$setValidity("notEqual",e===n.$viewValue)})}}}).controller("passwordModifyCtrl",["$scope","passwordService","$log",function(e,r,t){e.pwdChangeDetails={oldPassword:null,newPassword:null},e.confirmChangePassword=function(){r.changePassword(e.pwdChangeDetails).then(function(){e.messageBox.showInfo("密码修改成功")},function(r){t.error("girderPasswordServiceController",r),e.messageBox.showError("密码修改失败"+r.data.developerMessage)})}}]).factory("passwordService",["$log","$http","girderConfig",function(e,r,t){var n={},i=t.baseUrl+"/api/security/password";return n.changePassword=function(t){return e.info("passwordModify密码修改",t),r.put(i,t)},n}]),angular.module("girder.security.account.password",["girder.security.authorize.authService"]).directive("girderValidPassword",function(){return{restrict:"A",require:"ngModel",scope:{reference:"=girderValidPassword"},link:function(e,r,t,n){n.$parsers.unshift(function(r){""===r?n.$setValidity("_required",!1):n.$setValidity("_required",!0);var t=r!==e.reference;n.$setValidity("notEqual",!t)}),e.$watch("reference",function(e){n.$setValidity("notEqual",e===n.$viewValue)})}}}).factory("girderPasswordService",["$log","$uibModal","Session","girderConfig","$http",function(e,r,t,n,i){var o={},a=n.baseUrl+"/api/security/password";return o.showPasswordChangeForm=function(){var t=r.open({templateUrl:"girder/security/account/password/passwordchange.html",controller:"girderPasswordServiceController"});t.result.then(function(){e.info("return: "+new Date)},function(){e.info("Modal dismissed at: "+new Date)})},o.changePassword=function(e){return i.put(a,e)},o}]).controller("girderPasswordServiceController",["$scope","$modalInstance","Session","$log","girderPasswordService","messageBox",function(e,r,t,n,i,o){e.loginUser=t.user,e.showTip=!0,e.pwdChangeDetails={oldPassword:null,newPassword:null},e.confirmChangePassword=function(){i.changePassword(e.pwdChangeDetails).then(function(){o.showInfo("密码修改成功，请重新登录以验证！"),r.close(!0)},function(e){n.error("girderPasswordServiceController密码修改失败",e),o.showError("密码修改失败！"+e.data.developerMessage)})},e.cancel=function(){r.dismiss()},e.closeTip=function(){e.showTip=!1}}]),angular.module("girder.security.authorize.resource.organization",[]),angular.module("girder.security.authorize.resource.authServer",[]),angular.module("girder.security.authorize.resource").factory("GirderAuthServerService",["$http","$log","girderConfig",function(e,r,t){var n={},i=function(){return t.authServerUrl+"/uaa/ssoSessionId?callback=JSON_CALLBACK"},o=function(){return"/logout?callback=JSON_CALLBACK&redirect="+t.authServerUrl+"/uaa/logout;jsessionid="},a=i(),u=o();return n.getSSoSession=function(){return r.debug("GirderAuthServerService调用ssoSession url=",a),e.jsonp(a,{})},n.logoutSSO=function(t){var n=u+t;return r.debug("GirderAuthServerService退出调用 "+n),e.jsonp(n,{})},n}]),angular.module("girder.security.authorize.resource").factory("GirderMenusService",["$log","girderConfig","$resource",function(e,r,t){var n=t("/api/security/user/:appId/menus",{},{getMenusByApp:{method:"GET",isArray:!0}}),i={};return i.getUserMenusByApp=function(){return n.getMenusByApp({appId:r.ssoAppId},function(t){return e.debug("根据app获取用户菜单appId=",r.ssoAppId,t),t})},i}]),angular.module("girder.security.authorize.resource").factory("GirderOrgService",["$log","girderConfig","$resource",function(e,r,t){var n=t(r.baseUrl+"/api/security/",{},{getChildren:{method:"GET",url:r.baseUrl+"/api/security/organization/:id/children",isArray:!0}}),i={};return i.getChildren=function(r){return n.getChildren({id:r},function(r){return e.debug("获取组织机构下级经办节点:",r),r})},i}]),angular.module("girder.security.authorize.resource").factory("GirderUserService",["$log","girderConfig","$resource",function(e,r,t){var n=t("/api/security/user",{},{getUser:{method:"GET",isArray:!1}}),i={};return i.getUser=function(){return n.getUser(function(r){return e.debug("获取当前登录的用户信息:",r),r})},i}]),angular.module("girder.security.authorize.userSession").service("Session",["$cookies","CLIENT_USER_COOKIE","$log","SECURITY_USER_CACHE","userWrapperService","girderConfig",function(e,r,t,n,i,o){var a=function(){return r.userCookie+"-"+o.ssoAppId};return this.isAuthenticated=function(){return!!this.user},this.getUserAccount=function(){return this.user.account},this.getUser=function(){return this.user},this.getMenus=function(){return this.menus},this.getSessionId=function(){return this.id},this.create=function(r,t,o){this.id=r,this.user=i._wrapperUser(t),this.menus=o;var u={sessionId:this.id,user:this.user};e.putObject(a(),u),localStorage.setItem(n.menusCache,JSON.stringify(o))},this.destroySession=function(){this.id=null,this.user=null,e.remove(a());var r=e.getAll();angular.forEach(r,function(r,n){t.debug("清除cookie key=",n),e.remove(n)}),localStorage.clear()},this.restoreFromCookie=function(){var r=e.getObject(a());if(null!==r&&void 0!==r){this.id=r.sessionId,this.user=i._wrapperUser(r.user);var t=localStorage.getItem(n.menusCache);return this.menus=JSON.parse(t),!0}return!1},this}]),angular.module("girder.security.authorize.userSession").service("userWrapperService",["GirderOrgService",function(e){this.account=null,this.name=null,this.email=null,this.mobile=null,this.associatedCompanys=[],this.associatedPersons=[],this.roles=[],this.apps=[],this.userType=null,this.headImgUrl=null,this.hasRealNameAuth=!1,this.organization=null,this._wrapperUser=function(e){return angular.extend(this,e),this},this.getName=function(){return this.name},this.getAccount=function(){return this.account},this.getEmail=function(){return this.email},this.getMobile=function(){
return this.mobile},this.getAssociatedCompanys=function(){return this.associatedCompanys},this.getAssociatedPersons=function(){return this.associatedPersons},this.getRoles=function(){return this.roles},this.getApps=function(){return this.apps},this.getUserType=function(){return this.userType},this.getHeadImgUrl=function(){return this.headImgUrl},this.isRealNameAuth=function(){return this.hasRealNameAuth},this.getOrganization=function(){return this.organization},this.isMultiAssociatedPersons=function(){return this.associatedPersons.length>1},this.getFirstAssociatedPerson=function(){return this.associatedPersons[0]},this.isMultiAssociatedCompanys=function(){return this.associatedCompanys.length>1},this.getFirstAssociatedCompany=function(){return this.associatedCompanys[0]},this.hasRole=function(e){return this.roles.indexOf(e)>=0},this.getOrgNumber=function(){return null===this.organization?null:this.organization.orgNumber},this.getStateCode=function(){return null===this.organization?null:this.organization.stateCode},this.getOrgName=function(){return null===this.organization?null:this.organization.name},this.getOrganization=function(){return null===this.organization?null:this.organization},this.getOrgAllPosterity=function(){return null===this.organization?null:e.getChildren(this.organization.id)}}]),angular.module("girder.security.authorize.logon").service("GirderFormLoginService",["$log","$q","girderConfig","$http","GirderUserService","GirderMenusService","GirderUserLoginEventService","Session",function(e,r,t,n,i,o,a,u){var s=t.baseUrl+"/api/login",l=t.baseUrl+"/api/logout",c=function(e){return $.param(e)},d=function(){r.all([i.getUser().$promise,o.getUserMenusByApp().$promise]).then(function(r){e.debug("GirderFormLoginService 集成调用",r);var t=r[0],n=r[1];return e.debug("GirderFormLoginService 集成调用结果 user=",t,"menus",n),u.create(null,t,n),e.log("获取用户登录信息成功",u),a.raiseUserLoginEvent(u.user),u.user},function(r){e.error("GirderFormLoginService获取用户登录信息失败",r)})};this.login=function(r){return e.debug("用户登录实现-GirderFormLoginService"),e.log("authService向服务端发起请求",r,"url=",s),n.post(s,r,{headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},transformRequest:c}).then(function(){return e.log("登录验证成功"),d()},function(r){return e.error("登录验证失败",r),400===r.status?void a.raiseUserLoginFailedEvent("登录失败:"+r.data.message):void a.raiseUserLoginFailedEvent("系统正在维护，请稍后再试..")})},this.logout=function(){return e.debug("用户登录实现-GirderFormLoginService"),u.destroySession(),n.post(l).then(function(){e.log("成功登出"),a.raiseUserLogOutEvent()},function(r){e.error("登录验证失败",r)})}}]),angular.module("girder.security.authorize.logon",["girder.security.authorize.authService"]),angular.module("girder.security.authorize.logon").service("OffLineDevLoginService",["$log","$q","GirderAuthServerService","userWrapperService","GirderUserLoginEventService","Session","girderConfig","$http","OffLineDevLoginServiceConfig",function(e,r,t,n,i,o,a,u,s){var l=function(){return u.get(a.baseUrl+s.mockUserUrl)},c=function(){return u.get(a.baseUrl+s.mockMenusUrl)};this.login=function(){return e.debug("Portal用户登录实现-OffLineDevLoginService[只允许开发环境]"),r.all([l(),c()]).then(function(r){e.debug("OffLineDevLoginService 集成调用",r);var t="test-ssoSessionId",n=r[0].data,a=r[1].data;return e.debug("session="+t,"user=",n,"menus",a),o.create(t,n,a),e.log("登录验证成功",o),i.raiseUserLoginEvent(o.user),o.user},function(r){return e.error("OffLineDevLoginService获取用户登录信息失败",r),400===r.status?void i.raiseUserLoginFailedEvent("获取用户登录信息失败:"+r.data.message):void i.raiseUserLoginFailedEvent("系统正在维护，请稍后再试..")})},this.logout=function(){e.log("向服务端发起退出请求.."),o.destroySession(),i.raiseUserLogOutEvent()}}]).provider("OffLineDevLoginServiceConfig",{mockUserUrl:"/debug/mockUser.json",mockMenusUrl:"/debug/mockMenus.json",$get:[function(){var e={mockUserUrl:this.mockUserUrl,mockMenusUrl:this.mockMenusUrl};return e}]}),angular.module("girder.security.authorize.logon").service("GirderPortalLoginService",["$log","$q","GirderAuthServerService","GirderUserService","GirderMenusService","GirderUserLoginEventService","Session",function(e,r,t,n,i,o,a){this.login=function(){return e.debug("Portal用户登录实现-GirderPortalLoginService"),r.all([t.getSSoSession(),n.getUser().$promise,i.getUserMenusByApp().$promise]).then(function(r){e.debug("GirderPortalLoginService 集成调用",r);var t=r[0].data.ssoSessionId,n=r[1],i=r[2];return e.debug("session="+t,"user=",n,"menus",i),a.create(t,n,i),e.log("登录验证成功",a),o.raiseUserLoginEvent(a.user),a.user},function(r){return e.error("GirderPortalLoginService获取用户登录信息失败",r),400===r.status?void o.raiseUserLoginFailedEvent("获取用户登录信息失败:"+r.data.message):void o.raiseUserLoginFailedEvent("系统正在维护，请稍后再试..")})},this.logout=function(){var r=a.getUserAccount();e.log("向服务端发起退出请求..",r);var n=a.getSessionId();return a.destroySession(),t.logoutSSO(n).then(function(){e.log("退出登录成功"),o.raiseUserLogOutEvent()},function(e){o.raiseUserLogOutEvent()})}}]),angular.module("girder.security.authorize.logon").service("GirderUserLoginEventService",["$rootScope","$log","AUTH_EVENTS",function(e,r,t){this.raiseUserLoginEvent=function(n){r.log("广播用户登录事件",n),e.$broadcast(t.loginSuccess,n)},this.raiseUserLoginFailedEvent=function(n){r.log("广播用户登录系统错误事件",n),e.$broadcast(t.loginFailed,n)},this.raiseUserLogOutEvent=function(){r.log("广播用户退出登录事件"),e.$broadcast(t.logoutSuccess)},this.raiseRedirectToLoginEvent=function(){r.log("广播用户登录重定向事件"),e.$broadcast(t.redirectToLogin,null)}}]),angular.module("girder.ui.imageModule.compress",[]).directive("girderImageCompress",["$q",function(e){var r={restrict:"A",scope:{image:"=",resizeMaxHeight:"@?",resizeMaxWidth:"@?",resizeQuality:"@?",resizeType:"@?"},link:function(e,r,u){var s=function(r,t){o(r.url,function(o){var a=i(o,e);r.compressed={dataURL:a,type:a.match(/:(.+\/.+);/)[1],getBlob:function(){return n(this.dataURL)}},t(r)})},l=function(r){e.$apply(function(){u.multiple?e.image.push(r):e.image=r})};r.bind("change",function(r){u.multiple&&(e.image=[]);for(var n=r.target.files,i=0;i<n.length;i++){var o={file:n[i],url:t.createObjectURL(n[i])};a(n[i]).then(function(e){o.dataURL=e}),e.resizeMaxHeight||e.resizeMaxWidth?s(o,function(e){l(e)}):l(o)}})}},t=window.URL||window.webkitURL,n=function(e){var r;r=e.split(",")[0].indexOf("base64")>=0?atob(e.split(",")[1]):unescape(e.split(",")[1]);for(var t=e.split(",")[0].split(":")[1].split(";")[0],n=new Uint8Array(r.length),i=0;i<r.length;i++)n[i]=r.charCodeAt(i);return new Blob([n],{type:t})},i=function(e,r){var t=r.resizeType,n=100*r.resizeQuality||70,i="image/jpeg";void 0!==t&&"png"===t&&(i="image/png");var o=r.resizeMaxHeight||300,a=r.resizeMaxWidth||250,u=e.height,s=e.width;s>u?s>a&&(u=Math.round(u*=a/s),s=a):u>o&&(s=Math.round(s*=o/u),u=o);var l=document.createElement("canvas");l.width=s,l.height=u;var c=(l.getContext("2d").drawImage(e,0,0,s,u),l.toDataURL(i,n/100)),d=new Image;return d.src=c,d.src},o=function(e,r){var t=new Image;t.onload=function(){r(t)},t.src=e},a=function(r){var t=e.defer(),n=new FileReader;return n.onload=function(e){t.resolve(e.target.result)},n.readAsDataURL(r),t.promise};return r}]),angular.module("girder.ui.imageModule.viewBox",[]).service("imageViewBox",["messageService",function(e){this.showImage=function(r,t){var n={keyboard:!0,backdrop:!0,modalFade:!0,templateUrl:"girder/ui/image/imageViewBox/imageView.html"},i={headerText:r,imageData:t};return e.show(n,i)}}]),angular.module("girder.ui.menu.left",[]).directive("girderLeftNavMenu",["$log","AuthService",function(e,r){var t={templateUrl:"girder/ui/menu/left/leftNavMenu.html",restrict:"E",scope:{menus:"=",autoExpandFirstMenus:"="},controller:"girderLeftMenuController",link:function(e){r.isAuthenticated()&&(e.menus=r.getMenus())}};return t}]).controller("girderLeftMenuController",["$scope","$log","$location","AUTH_EVENTS","AuthService",function(e,r,t,n,i){var o="girderLeftNavMenu-foucs";e.status={isItemOpen:[]};var a=e.$watch("menus",function(t,n){r.debug("girderLeftMenuController监控菜单变化 new=",t,"old=",n),angular.isDefined(t)&&null!==t?(e.status.isItemOpen=new Array(e.menus.length),setTimeout(function(){r.debug("girderLeftMenuController自动展开一级菜单..."),e.status.isItemOpen[0]=!0,e.$apply()},50)):e.status.isItemOpen=[]});e.navigate=function(e){null===e||""===e||angular.isUndefined(e)||(r.debug("navigating to "+e),t.path(e))},e.autoExpandFirstMenus!==!0&&(r.debug("girderLeftMenuController不需要自动展开第一级菜单.."),a()),e.$on(n.loginSuccess,function(t,n){r.debug("girderLeftMenuController接收到loginSuccess事件",n),e.menus=i.getMenus()}),e.active=function(e){var t=e.target;r.debug("获取target..",t),angular.element("#girderLeftMenus").find("."+o).removeClass(o),angular.element(t).addClass(o)}}]),angular.module("girder.ui.menu.loginToolBar",["girder.security.account"]).directive("girderLoginToolBar",[function(){var e={templateUrl:"girder/ui/menu/logintoolbar/logintoolbar.html",restrict:"E",controller:"girderLoginToolBarController"};return e}]).controller("girderLoginToolBarController",["$scope","$log","$location","AuthService","AUTH_EVENTS","girderPasswordService",function(e,r,t,n,i,o){function a(){r.debug("重定向到登录界面",t.$$path);var e="/login";t.replace(),t.path(e)}e.logout=function(){n.logout(),a()},e.isLogon=function(){return n.isAuthenticated()},e.$on(i.redirectToLogin,function(){r.debug("接收到要求用户重新登录通知"),a()}),e.showUserCenter=function(){var e="/girder/security/account";r.debug("转向到用户中心",e),t.replace(),t.path(e)},e.showPasswordForm=function(){o.showPasswordChangeForm()},e.$on(i.loginSuccess,function(){r.debug("girderLoginToolBarController接收到loginSuccess事件,发起转向/home");var e="/home";t.path(e)})}]),angular.module("girder.ui.menu.top",[]).directive("girderTopMenu",["AuthService",function(e){var r={templateUrl:"girder/ui/menu/top/top-menu.html",restrict:"E",scope:!0,controller:"girderTopMenuController",link:function(r){e.isAuthenticated()&&(r.menus=e.getMenus())}};return r}]).controller("girderTopMenuController",["$scope","$log","AuthService","$location","AUTH_EVENTS",function(e,r,t,n,i){e.menus=null,e.navigate=function(e){null!==e&&(r.debug("navigating to "+e),n.path(e))},e.$on(i.loginSuccess,function(n,i){r.debug("girderTopMenuController接收到loginSuccess事件",i),e.menus=t.getMenus()})}]);